name: Terragrunt Azure LZ Deployment

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - 'tenants/SONAE/vwan/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'tenants/SONAE/vwan/**'
  workflow_dispatch:

env:
  ARM_USE_OIDC: true
  TF_IN_AUTOMATION: true
  TF_CLI_ARGS: "-no-color"

jobs:
  validate:
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
      contents: read # Required to fetch the repository contents.
    env:
      ACTION_REPOS_BUNDLE: ${{ secrets.ACTION_REPOS_BUNDLE }}
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: "c75894a6-4794-4188-8106-c6dc1b92443e"
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"      
      # TF_CLI_ARGS_validate: "-queue-ignore-errors"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: "c75894a6-4794-4188-8106-c6dc1b92443e"         

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
          # Configurar o Git para usar SSH
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          echo "✅ Clone SSH funcionou!"
    
      - name: Terragrunt Validate All
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: 1.10.0           
          tg_version: v0.77.1           
          terraform-path: /usr/local/bin/terraform     # já instalado via setup-terraform
          terragrunt-version: v0.77.1                  # sua versão desejada
          tg_dir: 'tenants/SONAE/vwan'                 # raiz onde seu terragrunt.hcl “root” vive
          tg_command: 'run-all validate'           
        env:          
          INPUT_PRE_EXEC_1: |
            mkdir -p ~/.ssh \
              && echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa \
              && chmod 600 ~/.ssh/id_rsa
          INPUT_PRE_EXEC_2: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
          
      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: "1.10.0"      
          
          
      # - name: Install Terragrunt
      #   run: |
      #     sudo curl -Lo /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.77.1/terragrunt_linux_amd64
      #     sudo chmod +x /usr/local/bin/terragrunt
            
      # # - name: Validate Landing Zone configs
      # #   run: |
      # #     TG_INPUTS_DEBUG=true terragrunt run-all validate

      # - name: Validate Landing Zone configs
      #   run: |
      #     export TG_DISABLE_COMMAND_VALIDATION=true
      #     export TG_INPUTS_DEBUG=true
      #     terragrunt run-all validate --disable-command-validation          

  deploy-landing-zone:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: "c75894a6-4794-4188-8106-c6dc1b92443e"
          
      - name: Deploy Landing Zone
        run: |
          cd tenants/SONAE/vwan
          terragrunt run-all apply --terragrunt-non-interactive \
            --terragrunt-working-dir ./northeurope/LandingZone \
            --terragrunt-working-dir ./westeurope/LandingZone \
            --terragrunt-ignore-external-dependencies

  deploy-streams:
    needs: deploy-landing-zone
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['northeurope', 'westeurope']
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: "c75894a6-4794-4188-8106-c6dc1b92443e"
          
      - name: Deploy Streams
        run: |
          cd tenants/SONAE/vwan/${{ matrix.region }}/Stream
          terragrunt run-all apply --terragrunt-non-interactive \
            --terragrunt-include-external-dependencies
