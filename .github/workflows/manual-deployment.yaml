name: "Manual Terragrunt Deployment"

on:
  workflow_dispatch:
    inputs:
      tenant:
        description: "Tenant to deploy (e.g., SONAE)"
        required: true
        type: choice
        options:
          - SONAE
        default: "SONAE"
      region:
        description: "Azure region (e.g., northeurope, westeurope)"
        required: true
        type: choice
        options:
          - northeurope
          - westeurope
        default: "northeurope"
      target:
        description: "Bundle/Stream to deploy. Use 'Discovery' workflow to see available options."
        required: true
        type: string
        default: "landingzone-complete"
      mode:
        description: "Execution mode (plan or apply)"
        required: true
        type: choice
        options:
          - plan
          - apply
        default: "plan"

permissions:
  id-token: write
  contents: read

jobs:
  execute-terragrunt:
    runs-on: ubuntu-latest
    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: "c75894a6-4794-4188-8106-c6dc1b92443e"      
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform & Terragrunt
        uses: ./.github/actions/setup-terraform-terragrunt
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
      
      - name: Make script executable
        run: chmod +x .github/scripts/terragrunt-entrypoint.sh

      - name: Execute Terragrunt
        run: |
          .github/scripts/terragrunt-entrypoint.sh "${{ github.event.inputs.tenant }}" "${{ github.event.inputs.region }}" "${{ github.event.inputs.target }}" "${{ github.event.inputs.mode }}"
